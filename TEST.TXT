/*
Example of Chirikov_Kicker using p5 for JS
Author: Lia de Belda
see also:
  https://www.complexity-explorables.org/
*/

//x, y, new x, new y
let x,p,x_,p_;
//chaotic variable
let k = 0.5;
//orbits
let origins = [];
//on true show p, x, k
let debug = true;

function setup() {
  
  createCanvas(400, 400);
  
  slider = createSlider(0, 10000000, 9716350);
  slider.position(10, 0);
  slider.style('width', '80px');
  
  //set orbits
  for(let i=0; i<2; i++){
    x=parseInt(random(width))%(2*PI);
    p=parseInt(random(height))%(2*PI);
    //origins.push({x:x, p:p});
    origins.push({x:x, p:p});
  }
  
  
}
function mouseClicked() {
  let mx = mouseX%(2*PI);
  let my = mouseY%(2*PI)
  //console.log(mx, my);
  origins.push({x:mx,p:my});
  console.log(origins.length);
  background(220);
  //reDraw();
}

function draw() {
  //background(220);
  
  //on new K reset canvas
  for(let j=0; j<origins.length; j++){
    if(k!=slider.value()/10000000){
      background(220);
      k = slider.value()/10000000;
    }
    
    p=origins[j].p;
    x=origins[j].x;
    
    //iterate functions
    p_ = (p + ( k * sin(x) ) )%(2*PI);
    x_ = (x + p_)%(2*PI);
  
    //map Values
    let mp = map(p_, 0, (2*PI), 0, width);
    let mx = map(x_, 0, (2*PI), 0, height);
  
    //update value
    
    origins[j].p = p_;
    origins[j].x = x_;
    /*
    //simple palette
    if(p < (2*PI/3)){
      stroke(255/p,0,0,170);
    }
    else if(p < (4*PI/3) && p >= (2*PI/3)){
      stroke(0,255/p,0,170);
    }
    else{
      //stroke(0,0,255/p,170);
    }
    */
    stroke(0);
    ellipse(mx,mp,2,2);
    }
  
    if(debug){
      noStroke();
      rect(0,0,160,75);
      stroke(0);
      text('p_: '+p_+"\n"+"x_: "+x_+"\nk: "+k+"\n", 10, 30);
    }
    
}
